{"version":3,"sources":["components/Home.tsx","components/navbar/button.tsx","components/Navbar.tsx","components/Rules.tsx","components/NewEvent.tsx","components/months/January.tsx","components/months/February.tsx","components/months/March.tsx","components/Calendar.tsx","components/Schedule.tsx","components/Teams.tsx","components/Standings.tsx","components/prizes.tsx","App.tsx","index.tsx"],"names":["Home","className","src","alt","NavButton","props","to","redirect","pageTitle","NavBar","useState","navbarOpen","setNavbarOpen","type","onClick","xmlns","viewBox","fill","fillRule","d","clipRule","id","Rules","NewEntry","teams","setTeams","useEffect","axios","get","headers","then","response","console","log","data","catch","ex","error","status","useForm","handleSubmit","register","timeOptions","map","time","value","teamOptions","team","players","team_id","submitEmail","email","message","a","fetch","method","body","JSON","stringify","res","json","toggle","onSubmit","result","filter","obj","player1_email","player2_email","entry_date","slice","post","toggleOff","day_of_week","placeholder","January","dates","setDates","toggleEntryView","setToggleEntryView","entryDate","setEntryDate","entryDay","setEntryDay","selectDate","date","day","buttonClick","createCalendar","events","matches","length","event","day_of_month","restrictions","February","March","LeagueCalendar","showMonth","month","setMonth","stroke","strokeLinecap","strokeLinejoin","strokeWidth","Schedule","scheduleData","course","blue","white","red","yellow","holes","round","image","process","Teams","standings","setStandings","teamData","photo","team_name","handicap","Standings","createStandings","sort","b","average","row","round1","round2","round3","round4","scope","Prizes","winnerData","closest","skins","skinsData","skin","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.055feb99.chunk.js","sourcesContent":["import React from 'react';\r\n// import logo from '/golf-logo.png'\r\n\r\nexport const Home = (): JSX.Element => {\r\n\r\n\r\n  return (\r\n    <div className='bg-darkBlue h-screen flex justify-center'>\r\n      <div className='flex flex-col w-4/5 items-center mt-6 md:mt-16'>\r\n        <img src={process.env.PUBLIC_URL + '/images/golf-logo.png'} className='w-24 md:w-auto' alt='logo'></img>\r\n        <div className='text-lightCyan text-center mt-8'>\r\n          <p className='text-xl font-bold font-mono md:text-3xl'>Welcome to the Inaugural Stevens Winter Cup</p>\r\n          <p className='mt-4 text-lg font-mono italic md:text-2xl'>A competition dedicated to playing golf through the cold months, having fun, and competing with friends. Grab your clubs, some drinks, and enjoy some rounds at famous courses across the US!</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { INavButtonProps } from '../../tools/interfaces'\r\n\r\n\r\nexport const NavButton: React.FC<INavButtonProps> = (props): JSX.Element => {\r\n  return (\r\n    <div className=\"text-babyBlue hover:underline hover:text-lightCyan px-3 py-2 rounded-md text-sm font-medium\">\r\n      <Link to={props.redirect}>{props.pageTitle}</Link>\r\n    </div>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport { NavButton } from './navbar/button';\r\nimport { Link } from 'react-router-dom'\r\n// import logo from '/golf-logo.png'\r\n// import name from '/golf-name.png'\r\n\r\nexport const NavBar = (): JSX.Element => {\r\n\r\n  const [navbarOpen, setNavbarOpen] = useState<boolean>(false)\r\n\r\n  const calendar = {\r\n    redirect: \"/calendar\",\r\n    pageTitle: \"Calendar\" \r\n  }\r\n  const standings = {\r\n    redirect: \"/standings\",\r\n    pageTitle: \"Standings\" \r\n  }\r\n  const teams = {\r\n    redirect: \"/teams\",\r\n    pageTitle: \"Teams\" \r\n  }\r\n  const schedule = {\r\n    redirect: \"/schedule\",\r\n    pageTitle: \"Schedule\" \r\n  }\r\n  const rules = {\r\n    redirect: \"/rules\",\r\n    pageTitle: \"Rules\" \r\n  }\r\n  const winners = {\r\n    redirect: \"/winners\",\r\n    pageTitle: \"Winners\"\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-3 border-b-2 border-lightCyan bg-darkBlue\">\r\n        <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\r\n          <div className=\"w-full relative flex items-end justify-between pt-2 md:w-auto md:static md:block md:justify-start\">\r\n          <div className=\"text-sm font-bold leading-relaxed inline-block mr-4 whitespace-nowrap uppercase text-babyBlue\">\r\n          <Link className='flex' to=\"/\">\r\n          <img className=\"h-10\" src={process.env.PUBLIC_URL + '/images/golf-logo.png'} alt=\"logo\"/>\r\n          <img className=\"hidden object-contain h-8 ml-2 md:block\" src={process.env.PUBLIC_URL + '/images/golf-name.png'} alt=\"name\"/>\r\n          </Link>\r\n          </div>\r\n            <svg className=\" text-babyBlue h-10 cursor-pointer leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block md:hidden outline-none focus:outline-none\"\r\n              type=\"button\"\r\n              onClick={() => setNavbarOpen(!navbarOpen)} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path fillRule=\"evenodd\" d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n          </div>\r\n          <div\r\n            className={\r\n              \"md:flex flex-grow items-center\" +\r\n              (navbarOpen ? \" flex\" : \" hidden\")\r\n            }\r\n            id=\"example-navbar-danger\"\r\n          >\r\n            <ul className=\"flex flex-col md:flex-row list-none md:ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <NavButton {...calendar} />\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavButton {...standings} />\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavButton {...teams} />\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavButton {...schedule} />\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavButton {...winners} />\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavButton {...rules} />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport const Rules = (): JSX.Element => {\r\n\r\n\r\n  return (\r\n    <div className=\"ml-4 mt-2 bg-babyPowder h-full lg:h-screen\">\r\n      <h1 className=\"font-bold text-2xl mb-4 flex flex-col items-center\">League Rules</h1>\r\n      <div className=\"flex flex-wrap flex-col items-center h-2/3 md:flex-row md:justify-center\">\r\n      <div className=\"max-w-sm rounded overflow-hidden shadow-lg w-1/3 m-4 bg-lightCyan p-2 w-11/12 lg:h-full\">\r\n  <h2 className=\"font-bold text-xl mb-4 text-center\">Format</h2>\r\n  <ul className=\"list-disc list-inside pl-2\">\r\n    <li>Scramble Format</li>\r\n    <li>9 Hole Rounds</li>\r\n    <li>1 Preliminary Round</li>\r\n      <ul className=\"list-square list-inside ml-6\">\r\n        <li>This round will be used to determine your team's handicap (No Sandbagging!)</li>\r\n      </ul>\r\n    <li>4 League Rounds</li>\r\n      <ul className=\"list-square list-inside ml-6\">\r\n        <li>These will be played between Jan-Mar</li>\r\n      </ul>\r\n    <li>League standings will be based on Net score</li>\r\n      <ul className=\"list-square list-inside ml-6\">\r\n        <li>Handicaps will adjust after each round</li>\r\n      </ul>\r\n  </ul>\r\n</div>\r\n<div className=\"max-w-sm rounded overflow-hidden shadow-lg w-1/3 m-4 bg-lightCyan p-2 w-11/12 lg:h-full\">\r\n  <h2 className=\"font-bold text-xl mb-4 text-center\">Playoffs</h2>\r\n  <ul className=\"list-disc list-inside pl-2\">\r\n    <li>8 Teams will make the playoffs</li>\r\n    <li>Teams will be seeded based on league standings</li>\r\n    <li>Match Play format between 2 teams (still playing as a scramble)</li>\r\n    <li>Quarterfinals matchups will take place in first few weeks of April</li>\r\n    <li>Semi Finals and Finals will be played during the championship cookout</li>\r\n  </ul>\r\n</div>\r\n<div className=\"max-w-sm rounded overflow-hidden shadow-lg w-1/3 m-4 bg-lightCyan p-2 w-11/12 h-full\">\r\n  <h2 className=\"font-bold text-xl mb-4 text-center\">Payments</h2>\r\n  <ul className=\"list-disc list-inside pl-2\">\r\n            <li>$20 Entry Fee</li>\r\n            <li>$10 per round per person</li>\r\n            <li>This money will go towards weekly and end of year prizes</li>\r\n              <ul className=\"list-square list-inside ml-6\">\r\n                  <li>You can pay per round or $40 upfront</li>\r\n              </ul>\r\n            <li>Payouts:</li>\r\n              <ul className=\"list-square list-inside ml-6\">\r\n                <li>Skins - If your team scores the lowest net score on a hole then you will win a skin</li>\r\n                  <ul className=\"list-disc list-inside ml-6\">\r\n                    <li>$5 per hole, carries over for holes not won by an individual team</li>\r\n                    <li>Essentially biridies and eagles can win you money!</li>\r\n                  </ul>\r\n                <li>Closest to the pin - one hole per round will be designated - $20</li>\r\n                <li>End of year prizes - TBD (based on # of teams)</li>\r\n              </ul>\r\n          </ul>\r\n</div>\r\n</div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {ITeam, INewEntryClick} from '../tools/interfaces'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nexport const NewEntry = (props:INewEntryClick): JSX.Element => {\r\n\r\n  const [teams, setTeams] = useState<ITeam[]>([])\r\n\r\n  type Inputs = {\r\n    team: string,\r\n    time: string\r\n  }\r\n\r\n  useEffect(() =>  {\r\n      axios\r\n      .get<ITeam[]>(\"/teams\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n      })\r\n      .then(response => {\r\n        console.log(response.data)\r\n        setTeams(response.data);\r\n      })\r\n      .catch(ex => {\r\n        const error =\r\n        ex.response.status === 404\r\n          ? \"Resource not found\"\r\n          : \"An unexpected error has occurred\";\r\n          console.log(error)\r\n      });\r\n  }, [])\r\n\r\n  const { handleSubmit, register} = useForm<Inputs>();\r\n  const onSubmit = (data: Inputs) => {\r\n      let result = teams.filter(obj => {\r\n        return obj.players === data.team\r\n      })\r\n      let email = `pjconnolly12@gmail.com, ${result[0].player1_email}, ${result[0].player2_email}`;\r\n      let message = `This email is to confirm that ${data.team} have a tee time on ${props.entry_date.slice(0,10)} at ${data.time}`;\r\n      axios\r\n        .post(\"/calendar\", {\r\n          team: data.team,\r\n          time: data.time,\r\n          entry_date: props.entry_date.slice(0,10)\r\n          })\r\n        .then(function(response: Inputs | any) {\r\n          console.log(response)\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      submitEmail(email, message)\r\n      props.toggleOff(false)\r\n  }\r\n\r\n  const times = ['9am','10am', '11am', '12pm', '1pm', '2pm', '3pm', '4pm', '5pm', '6pm', '7pm', '8pm']\r\n\r\n  const timeOptions = times.map(time => {\r\n    return (\r\n    <option key={time} value={time}>{time}</option>)\r\n  })\r\n\r\n  const teamOptions = teams.map(team=> {\r\n    return (\r\n      <option key={team.team_id} value={team.players}>{team.players}</option>\r\n    )\r\n  })\r\n\r\n  const closeWindow = () => {\r\n    props.toggleOff(false)\r\n  }\r\n\r\n  const submitEmail = async (email: string, message: string) => {\r\n    const response = await fetch(\"/send\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({email: email, message: message }),\r\n    })\r\n      .then((res) => res.json())\r\n  };\r\n\r\n  return (\r\n    <div className={\"flex p-2 w-3/4 justify-center text-xs fixed inset-0 z-50 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-babyBlue rounded shadow-lg border-2 border-darkBlue md:w-1/2 \" + (props.toggle ? \"flex\" : \"hidden\")}>\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col m-6 p-4 md:w-1/3 lg:p-8\">\r\n      <label className='block text-sm font-medium text-darkBlue mt-4 text-lg'>Day: {props.entry_date.slice(5,10)} - {props.day_of_week}</label>\r\n      <label className=\"block text-sm font-medium text-darkBlue mt-4\">Team:</label>\r\n      <select {...register(\"team\")} className=\"rounded mt-1 p-1\" placeholder='Select your Team' >\r\n      <option>Select your Team</option>\r\n        {teamOptions}\r\n      </select>\r\n      <label className=\"block text-sm font-medium text-darkBlue mt-4\">Time:</label>\r\n      <select {...register(\"time\")} className=\"rounded mt-1 p-1\" placeholder='Select a Time'>\r\n      <option>Select a Time</option>\r\n        {timeOptions}\r\n      </select>\r\n      <input className=\"mt-8 rounded bg-babyPowder text-darkBlue font-semibold cursor-pointer text-lg hover:bg-lightCyan\" type=\"submit\" />\r\n    </form>\r\n    <button className=\"fixed top-2 right-2 text-primary font-extrabold text-lg cursor-pointer\" onClick={() => closeWindow()}>X</button>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { ICalendar } from '../../tools/interfaces';\r\nimport { NewEntry } from '../NewEvent';\r\n\r\nexport const January = (): JSX.Element => {\r\n\r\n  const [dates, setDates] = useState<ICalendar[]>([])\r\n  const [toggleEntryView, setToggleEntryView] = useState(false)\r\n  const [entryDate, setEntryDate] = useState<string>(\"\")\r\n  const [entryDay, setEntryDay] = useState<string>(\"\")\r\n\r\n\r\n  useEffect(() =>  {\r\n    axios\r\n    .get<ICalendar[]>(\"/calendar/january\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    })\r\n    .then(response => {\r\n      console.log(response.data)\r\n      setDates(response.data);\r\n    })\r\n    .catch(ex => {\r\n      const error =\r\n      ex.response.status === 404\r\n        ? \"Resource not found\"\r\n        : \"An unexpected error has occurred\";\r\n        console.log(error)\r\n    });\r\n  },[toggleEntryView])\r\n\r\n  const selectDate = async (date:string, day:string) => {\r\n    setToggleEntryView(true)\r\n    setEntryDate(date)\r\n    setEntryDay(day)\r\n  }\r\n\r\n  const buttonClick = {\r\n    toggleOff: setToggleEntryView,\r\n    toggle: toggleEntryView,\r\n    entry_date: entryDate,\r\n    day_of_week: entryDay,\r\n  }\r\n\r\n  const createCalendar = dates.map(day => {\r\n    let events;\r\n    if (day.matches.length > 0){\r\n      events = day.matches.map(event => {\r\n        return (\r\n          <div className=\"pt-1 pl-1 text-xs md:text-base\">{event}</div>\r\n        )\r\n      })\r\n    }\r\n    return (\r\n      <div className=\"w-2/3 text-left m-2 h-32 border-2 border-darkBlue md:w-48\" onClick={() => {selectDate(day.entry_date, day.day_of_week )}}>\r\n        <div className=\"pt-1 pl-1 border-b-2 border-darkBlue bg-darkBlue font-semibold text-babyBlue\">{day.day_of_month} - {day.day_of_week}</div>\r\n        <div className=\"pt-1 pl-1 text-xs md:text-base\">{day.restrictions}</div>\r\n        {events}\r\n      </div>\r\n    ) \r\n  })\r\n\r\n  return (\r\n      <div className=\"flex flex-wrap justify-center md:justify-start md:ml-6\">\r\n      <NewEntry {...buttonClick}/>\r\n      {createCalendar}\r\n      </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { ICalendar } from '../../tools/interfaces';\r\nimport { NewEntry } from '../NewEvent';\r\n\r\nexport const February = (): JSX.Element => {\r\n\r\n  const [dates, setDates] = useState<ICalendar[]>([])\r\n  const [toggleEntryView, setToggleEntryView] = useState(false)\r\n  const [entryDate, setEntryDate] = useState<string>(\"\")\r\n  const [entryDay, setEntryDay] = useState<string>(\"\")\r\n\r\n  useEffect(() =>  {\r\n      axios\r\n      .get<ICalendar[]>(\"/calendar/february\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n      })\r\n      .then(response => {\r\n        console.log(response.data)\r\n        setDates(response.data);\r\n      })\r\n      .catch(ex => {\r\n        const error =\r\n        ex.response.status === 404\r\n          ? \"Resource not found\"\r\n          : \"An unexpected error has occurred\";\r\n          console.log(error)\r\n      });\r\n  }, [toggleEntryView])\r\n\r\n  const selectDate = async (date:string, day:string) => {\r\n    setToggleEntryView(true)\r\n    setEntryDate(date)\r\n    setEntryDay(day)\r\n  }\r\n\r\n  const buttonClick = {\r\n    toggleOff: setToggleEntryView,\r\n    toggle: toggleEntryView,\r\n    entry_date: entryDate,\r\n    day_of_week: entryDay,\r\n  }\r\n\r\n\r\n  const createCalendar = dates.map(day => {\r\n\r\n    let events;\r\n\r\n    if (day.matches.length > 0){\r\n      events = day.matches.map(event => {\r\n        return (\r\n          <div className=\"pt-1 pl-1 text-xs md:text-base\">{event}</div>\r\n        )\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div className=\"w-1/3 text-left m-2 h-32 border-2 border-darkBlue md:w-48\" onClick={() => {selectDate(day.entry_date, day.day_of_week)}}>\r\n        <div className=\"pt-1 pl-1 border-b-2 border-darkBlue bg-darkBlue font-semibold text-babyBlue\">{day.day_of_month} - {day.day_of_week}</div>\r\n        <div className=\"pt-1 pl-1 text-xs md:text-base\">{day.restrictions}</div>\r\n        {events}\r\n      </div>\r\n    ) \r\n  })\r\n\r\n  return (\r\n      <div className=\"flex flex-wrap justify-center md:justify-start md:ml-6\">\r\n      <NewEntry {...buttonClick}/>\r\n      {createCalendar}\r\n      </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { ICalendar } from '../../tools/interfaces';\r\nimport { NewEntry } from '../NewEvent';\r\n\r\nexport const March = (): JSX.Element => {\r\n\r\n  const [dates, setDates] = useState<ICalendar[]>([])\r\n  const [toggleEntryView, setToggleEntryView] = useState(false)\r\n  const [entryDate, setEntryDate] = useState<string>(\"\")\r\n  const [entryDay, setEntryDay] = useState<string>(\"\")\r\n\r\n  useEffect(() =>  {\r\n      axios\r\n      .get<ICalendar[]>(\"/calendar/march\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n      })\r\n      .then(response => {\r\n        console.log(response.data)\r\n        setDates(response.data);\r\n      })\r\n      .catch(ex => {\r\n        const error =\r\n        ex.response.status === 404\r\n          ? \"Resource not found\"\r\n          : \"An unexpected error has occurred\";\r\n          console.log(error)\r\n      });\r\n  }, [toggleEntryView])\r\n\r\n  const selectDate = async (date:string, day:string) => {\r\n    setToggleEntryView(true)\r\n    setEntryDate(date)\r\n    setEntryDay(day)\r\n  }\r\n\r\n  const buttonClick = {\r\n    toggleOff: setToggleEntryView,\r\n    toggle: toggleEntryView,\r\n    entry_date: entryDate,\r\n    day_of_week: entryDay,\r\n  }\r\n\r\n\r\n  const createCalendar = dates.map(day => {\r\n\r\n    let events;\r\n\r\n    if (day.matches.length > 0){\r\n      events = day.matches.map(event => {\r\n        return (\r\n          <div className=\"pt-1 pl-1 text-xs md:text-base\">{event}</div>\r\n        )\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div className=\"w-1/3 text-left m-2 h-32 border-2 border-darkBlue md:w-48\" onClick={() => {selectDate(day.entry_date, day.day_of_week)}}>\r\n        <div className=\"pt-1 pl-1 border-b-2 border-darkBlue bg-darkBlue font-semibold text-babyBlue\">{day.day_of_month} - {day.day_of_week}</div>\r\n        <div className=\"pt-1 pl-1 text-xs md:text-base\">{day.restrictions}</div>\r\n        {events}\r\n      </div>\r\n    ) \r\n  })\r\n\r\n  return (\r\n      <div className=\"flex flex-wrap justify-center md:justify-start md:ml-6\">\r\n      <NewEntry {...buttonClick}/>\r\n      {createCalendar}\r\n      </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { January } from './months/January';\r\nimport { February } from './months/February';\r\nimport { March } from './months/March';\r\n\r\n\r\nexport const LeagueCalendar = (): JSX.Element => {\r\n\r\n  const [month, setMonth] = useState<string>(\"February\")\r\n\r\n  const changeMonthRight = () => {\r\n    if (month === \"January\"){\r\n      setMonth(\"February\")\r\n    } else if (month === \"February\") {\r\n      setMonth(\"March\")\r\n    }\r\n  }\r\n\r\n  const changeMonthLeft = () => {\r\n    if (month === \"March\"){\r\n      setMonth(\"February\")\r\n    } else if (month === \"February\") {\r\n      setMonth(\"January\")\r\n    }\r\n  }\r\n\r\n  let showMonth;\r\n  if(month === \"January\"){\r\n    showMonth = <January />\r\n  } else if (month === \"February\"){\r\n    showMonth = <February />\r\n  } else {\r\n    showMonth = <March />\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-babyPowder\">\r\n      {/* Add month header here so you can swap between months with button clicks */}\r\n      <div className=\"flex justify-center\">\r\n        <div onClick={() => {changeMonthLeft()}}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mt-2 mr-4 cursor-pointer\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 17l-5-5m0 0l5-5m-5 5h12\" />\r\n          </svg>\r\n        </div>\r\n      <h1 className=\"static text-xl font-bold mt-2 text-darkBlue\">{month}</h1>\r\n      <div onClick={() => {changeMonthRight()}}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mt-2 ml-4 cursor-pointer\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      {showMonth}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n// import pacific from '/pacificdunes.jpg'\r\n// import harbour from '/harbour.jpeg'\r\n// import innisbrook from '/innisbrook.jpg'\r\n// import kiawah from '/kiawah.png'\r\n// import pga from '/pga.jpg'\r\n// import pinehurst from '/pinehurst.jpg'\r\n// import scottsdale from '/scottsdale.jpg'\r\n// import torrey from '/torrey.jpg'\r\n\r\nexport const Schedule = (): JSX.Element => {\r\n\r\n  const schedule = [\r\n    {\r\n      course: \"Pacific Dunes\",\r\n      blue: \"6,078\",\r\n      white: \"5,672\",\r\n      red: \"5,158\",\r\n      yellow: \"5,089\",\r\n      holes: \"Back Nine\",\r\n      round: \"Preliminary\",\r\n      image: '/images/pacificdunes.jpg' \r\n    },\r\n    {\r\n      course: \"Harbour Town Golf Links\",\r\n      blue: \"6,663\",\r\n      white: \"6,245\",\r\n      red: \"5,889\",\r\n      yellow: \"4,999\",\r\n      holes: \"Front Nine\",\r\n      round: \"1\",\r\n      image: '/images/harbour.jpeg'\r\n    },\r\n    {\r\n      course: \"Innisbrook\",\r\n      blue: \"6,563\",\r\n      white: \"6,063\",\r\n      red: \"5,447\",\r\n      yellow: \"4,838\",\r\n      holes: \"Back Nine\",\r\n      round: \"2\",\r\n      image: '/images/innisbrook.jpg'\r\n    },\r\n    {\r\n      course: \"TPC Scottsdale\",\r\n      blue: \"6,612\",\r\n      white: \"6,271\",\r\n      red: \"5,958\",\r\n      yellow: \"5,402\",\r\n      holes: \"Back Nine\",\r\n      round: \"3\",\r\n      image: '/images/scottsdale.jpg'\r\n    },\r\n    {\r\n      course: \"Pinehurst #2\",\r\n      blue: \"6,907\",\r\n      white: \"6,358\",\r\n      red: \"5,792\",\r\n      yellow: \"4,938\",\r\n      holes: \"Front Nine\",\r\n      round: \"4\",\r\n      image: '/images/pinehurst.jpg'\r\n    },\r\n    {\r\n      course: \"PGA National\",\r\n      blue: \"6,735\",\r\n      white: \"6,381\",\r\n      red: \"6,001\",\r\n      yellow: \"5,158\",\r\n      holes: \"Back Nine\",\r\n      round: \"Quarter-Finals\",\r\n      image: '/images/pga.jpg'\r\n    },\r\n    {\r\n      course: \"Torrey Pines\",\r\n      blue: \"7,028\",\r\n      white: \"6,631\",\r\n      red: \"6,128\",\r\n      yellow: \"5,398\",\r\n      holes: \"Back Nine\",\r\n      round: \"Semi-Finals\",\r\n      image: '/images/torrey.jpg'\r\n    },\r\n    {\r\n      course: \"Kiawah Ocean Course\",\r\n      blue: \"6,813\",\r\n      white: \"6,463\",\r\n      red: \"6,157\",\r\n      yellow: \"5,312\",\r\n      holes: \"Back Nine\",\r\n      round: \"Championship\",\r\n      image: '/images/kiawah.png'\r\n    }\r\n  ]\r\n\r\n  const scheduleData = schedule.map(event => {\r\n    return (\r\n    <div key={event.course} className=\"max-w-sm rounded overflow-hidden shadow-lg w-2/3 m-4 bg-lightCyan\">\r\n    <img className=\"object-contain\" src={process.env.PUBLIC_URL + event.image} alt=\"teamPhoto\"/>\r\n    <div className=\"px-6 py-4\">\r\n      <div className=\"font-bold mb-2 text-darkBlue md:text-xl\">{event.course}</div>\r\n      <p className=\"text-darkBlue text-base\"><strong>Round:</strong> {event.round}</p>\r\n      <p className=\"text-darkBlue text-base\"><strong>Holes:</strong> {event.holes}</p>\r\n      <p className=\"text-darkBlue text-base\"><strong>Blue:</strong> {event.blue}</p>\r\n      <p className=\"text-darkBlue text-base\"><strong>White:</strong> {event.white}</p>\r\n      <p className=\"text-darkBlue text-base\"><strong>Red:</strong> {event.red}</p>\r\n      <p className=\"text-darkBlue text-base\"><strong>Yellow:</strong> {event.yellow}</p>\r\n    </div>\r\n    </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"flex flex-col flex-wrap content-center bg-babyPowder md:flex-row md:justify-center\">\r\n      {scheduleData}\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { IStandings } from '../tools/interfaces';\r\n\r\nexport const Teams = (): JSX.Element => {\r\n\r\n  const [standings, setStandings] = useState<IStandings[]>([])\r\n\r\n  useEffect(() =>  {\r\n    axios\r\n    .get<IStandings[]>(\"/standings\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    })\r\n    .then(response => {\r\n      console.log(response.data)\r\n      setStandings(response.data);\r\n    })\r\n    .catch(ex => {\r\n      const error =\r\n      ex.response.status === 404\r\n        ? \"Resource not found\"\r\n        : \"An unexpected error has occurred\";\r\n        console.log(error)\r\n    });\r\n}, [])\r\n\r\n  const teamData = standings.map(team => {\r\n    return (\r\n    <div key={team.team_name} className=\"max-w-sm rounded overflow-hidden shadow-lg w-1/3 m-4 bg-lightCyan\">\r\n    <img className=\"object-contain\" src={process.env.PUBLIC_URL + `/images/${team.photo}`} alt=\"teamPhoto\"/>\r\n    <div className=\"px-6 py-4\">\r\n      <div className=\"font-bold mb-2 text-darkBlue md:text-xl\">{team.team_name}</div>\r\n      <p className=\"text-darkBlue text-base\">\r\n        Handicap: {team.handicap}\r\n      </p>\r\n    </div>\r\n    </div>\r\n    )\r\n  })\r\n\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap justify-center bg-babyPowder\">\r\n      {teamData}\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { IStandings } from '../tools/interfaces';\r\n\r\nexport const Standings = (): JSX.Element => {\r\n\r\n  const [standings, setStandings] = useState<IStandings[]>([])\r\n\r\n  useEffect(() =>  {\r\n    axios\r\n    .get<IStandings[]>(\"/standings\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    })\r\n    .then(response => {\r\n      console.log(response.data)\r\n      setStandings(response.data);\r\n    })\r\n    .catch(ex => {\r\n      const error =\r\n      ex.response.status === 404\r\n        ? \"Resource not found\"\r\n        : \"An unexpected error has occurred\";\r\n        console.log(error)\r\n    });\r\n}, [])\r\n\r\n  const createStandings = standings\r\n    .sort((a, b) => a.average > b.average ? 1 : -1  )\r\n    .map(row => {\r\n    return(\r\n      <tr className=\"bg-babyPowder\">\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"ml-4\">\r\n            <div className=\"text-sm font-medium text-gray-900\">\r\n              {row.team_name}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n        <div className=\"text-sm text-gray-900\">{row.average}</div>\r\n      </td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n        <div className=\"text-sm text-gray-900\">{row.round1}</div>\r\n      </td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n        <div className=\"text-sm text-gray-900\">{row.round2}</div>\r\n      </td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n        <div className=\"text-sm text-gray-900\">{row.round3}</div>\r\n      </td>\r\n      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n        <div className=\"text-sm text-gray-900\">{row.round4}</div>\r\n      </td>\r\n    </tr>\r\n    )\r\n  })\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-col h-screen\">\r\n  <div className=\"py-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n      <div className=\"shadow overflow-hidden border-b border-babyBlue sm:rounded-lg\">\r\n        <table className=\"min-w-full divide-y divide-babyBlue\">\r\n          <thead className=\"bg-babyBlue\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-bold text-darkBlue uppercase tracking-wider\">\r\n                Team\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-bold text-darkBlue uppercase tracking-wider\">\r\n                Average\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-bold text-darkBlue uppercase tracking-wider\">\r\n                RD1\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-bold text-darkBlue uppercase tracking-wider\">\r\n                RD2\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-bold text-darkBlue uppercase tracking-wider\">\r\n                RD3\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-bold text-darkBlue uppercase tracking-wider\">\r\n                RD4\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-babyBlue\">\r\n            {createStandings}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport const Prizes = (): JSX.Element => {\r\n\r\n  const winners = [\r\n    {\r\n      round: \"Round 1\",\r\n      closest: \"\",\r\n      skins: [],\r\n    },\r\n    {\r\n      round: \"Round 2\",\r\n      closest: \"\",\r\n      skins: [],   \r\n    },\r\n    {\r\n      round: \"Round 3\",\r\n      closest: \"\",\r\n      skins: [],\r\n    },\r\n    {\r\n      round: \"Round 4\",\r\n      closest: \"\",\r\n      skins: [],\r\n    },\r\n  ]\r\n\r\n  const winnerData = winners.map(event => {\r\n\r\n    const skinsData = event.skins.map(skin => {\r\n      return (\r\n        <div>\r\n          <p className=\"pl-4 pb-2\">{skin}</p>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n    <div key={event.round} className=\"rounded overflow-hidden shadow-lg w-11/12 m-4 bg-lightCyan md:w-1/2\">\r\n      <div className=\"p-2 font-bold mb-2 text-darkBlue md:text-xl\">{event.round}</div>\r\n      <p className=\"pl-2 text-darkBlue text-base\"><strong>Closest to the Pin:</strong> {event.closest}</p>\r\n      <p className=\"pl-2 pb-2 text-darkBlue text-base\"><strong>Skins:</strong></p>\r\n      {skinsData}\r\n    </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center bg-babyPowder h-screen w-screen\">\r\n      {winnerData}\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\nimport { Home } from './components/Home';\nimport { NavBar } from './components/Navbar';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport { Rules } from './components/Rules';\nimport { LeagueCalendar } from './components/Calendar';\nimport { Schedule } from './components/Schedule';\nimport { Teams } from './components/Teams';\nimport { Standings } from './components/Standings';\nimport { Prizes } from './components/prizes';\n\nfunction App() {\n  return (\n<Router>\n  <div className=\"flex flex-col bg-babyPowder\">\n    <NavBar />\n    <Routes>\n      <Route path='/rules' element={<Rules/>}/>\n      <Route path='/teams' element={<Teams/>}/>\n      <Route path='/winners' element={<Prizes/>}/>\n      <Route path='/calendar' element={<LeagueCalendar/>}/>\n      <Route path='/standings' element={<Standings/>} />\n      <Route path='/schedule' element={<Schedule/>}/>\n      <Route path='/' element={<Home/>} />\n    </Routes>\n  </div>\n</Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}