{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pjcon\\\\dev\\\\simulator\\\\src\\\\src\\\\components\\\\NewEvent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewEntry = props => {\n  _s();\n\n  const [teams, setTeams] = useState([]);\n  useEffect(() => {\n    axios.get(\"/teams\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      console.log(response.data);\n      setTeams(response.data);\n    }).catch(ex => {\n      const error = ex.response.status === 404 ? \"Resource not found\" : \"An unexpected error has occurred\";\n      console.log(error);\n    });\n  }, []);\n  const {\n    handleSubmit,\n    register\n  } = useForm();\n\n  const onSubmit = data => {\n    let result = teams.filter(obj => {\n      return obj.players === data.team;\n    });\n    let email = `pjconnolly12@gmail.com, ${result[0].player1_email}, ${result[0].player2_email}`;\n    let message = `This email is to confirm that ${data.team} have a tee time on ${props.entry_date.slice(0, 10)} at ${data.time}`;\n    axios.post(\"/calendar\", {\n      team: data.team,\n      time: data.time,\n      entry_date: props.entry_date.slice(0, 10)\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    }); // submitEmail(email, message)\n\n    props.toggleOff(false);\n  };\n\n  const times = ['9am', '10am', '11am', '12pm', '1pm', '2pm', '3pm', '4pm', '5pm', '6pm', '7pm', '8pm'];\n  const timeOptions = times.map(time => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: time,\n      children: time\n    }, time, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this);\n  });\n  const teamOptions = teams.map(team => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: team.players,\n      children: team.players\n    }, team.team_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  });\n\n  const closeWindow = () => {\n    props.toggleOff(false);\n  };\n\n  const submitEmail = async (email, message) => {\n    const response = await fetch(\"/send\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        message: message\n      })\n    }).then(res => res.json());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex p-2 w-3/4 justify-center text-xs fixed inset-0 z-50 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-babyBlue rounded shadow-lg border-2 border-darkBlue md:w-1/2 \" + (props.toggle ? \"flex\" : \"hidden\"),\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"flex flex-col m-6 p-4 md:w-1/3 lg:p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium text-darkBlue mt-4 text-lg\",\n        children: [\"Day: \", props.entry_date.slice(5, 10), \" - \", props.day_of_week]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium text-darkBlue mt-4\",\n        children: \"Team:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...register(\"team\"),\n        className: \"rounded mt-1 p-1\",\n        placeholder: \"Select your Team\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select your Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this), teamOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium text-darkBlue mt-4\",\n        children: \"Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...register(\"time\"),\n        className: \"rounded mt-1 p-1\",\n        placeholder: \"Select a Time\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select a Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }, this), timeOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"mt-8 rounded bg-babyPowder text-darkBlue font-semibold cursor-pointer text-lg hover:bg-lightCyan\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fixed top-2 right-2 text-primary font-extrabold text-lg cursor-pointer\",\n      onClick: () => closeWindow(),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewEntry, \"3L9mQCSNWhMh9AbRPhprUeKFm4A=\", false, function () {\n  return [useForm];\n});\n\n_c = NewEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewEntry\");","map":{"version":3,"sources":["C:/Users/pjcon/dev/simulator/src/src/components/NewEvent.tsx"],"names":["React","useState","useEffect","axios","useForm","NewEntry","props","teams","setTeams","get","headers","then","response","console","log","data","catch","ex","error","status","handleSubmit","register","onSubmit","result","filter","obj","players","team","email","player1_email","player2_email","message","entry_date","slice","time","post","toggleOff","times","timeOptions","map","teamOptions","team_id","closeWindow","submitEmail","fetch","method","body","JSON","stringify","res","json","toggle","day_of_week"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {ITeam, INewEntryClick} from '../tools/interfaces'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nexport const NewEntry = (props:INewEntryClick): JSX.Element => {\r\n\r\n  const [teams, setTeams] = useState<ITeam[]>([])\r\n\r\n  type Inputs = {\r\n    team: string,\r\n    time: string\r\n  }\r\n\r\n  useEffect(() =>  {\r\n      axios\r\n      .get<ITeam[]>(\"/teams\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n      })\r\n      .then(response => {\r\n        console.log(response.data)\r\n        setTeams(response.data);\r\n      })\r\n      .catch(ex => {\r\n        const error =\r\n        ex.response.status === 404\r\n          ? \"Resource not found\"\r\n          : \"An unexpected error has occurred\";\r\n          console.log(error)\r\n      });\r\n  }, [])\r\n\r\n  const { handleSubmit, register} = useForm<Inputs>();\r\n  const onSubmit = (data: Inputs) => {\r\n      let result = teams.filter(obj => {\r\n        return obj.players === data.team\r\n      })\r\n      let email = `pjconnolly12@gmail.com, ${result[0].player1_email}, ${result[0].player2_email}`;\r\n      let message = `This email is to confirm that ${data.team} have a tee time on ${props.entry_date.slice(0,10)} at ${data.time}`;\r\n      axios\r\n        .post(\"/calendar\", {\r\n          team: data.team,\r\n          time: data.time,\r\n          entry_date: props.entry_date.slice(0,10)\r\n          })\r\n        .then(function(response: Inputs | any) {\r\n          console.log(response)\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      // submitEmail(email, message)\r\n      props.toggleOff(false)\r\n  }\r\n\r\n  const times = ['9am','10am', '11am', '12pm', '1pm', '2pm', '3pm', '4pm', '5pm', '6pm', '7pm', '8pm']\r\n\r\n  const timeOptions = times.map(time => {\r\n    return (\r\n    <option key={time} value={time}>{time}</option>)\r\n  })\r\n\r\n  const teamOptions = teams.map(team=> {\r\n    return (\r\n      <option key={team.team_id} value={team.players}>{team.players}</option>\r\n    )\r\n  })\r\n\r\n  const closeWindow = () => {\r\n    props.toggleOff(false)\r\n  }\r\n\r\n  const submitEmail = async (email: string, message: string) => {\r\n    const response = await fetch(\"/send\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({email: email, message: message }),\r\n    })\r\n      .then((res) => res.json())\r\n  };\r\n\r\n  return (\r\n    <div className={\"flex p-2 w-3/4 justify-center text-xs fixed inset-0 z-50 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-babyBlue rounded shadow-lg border-2 border-darkBlue md:w-1/2 \" + (props.toggle ? \"flex\" : \"hidden\")}>\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col m-6 p-4 md:w-1/3 lg:p-8\">\r\n      <label className='block text-sm font-medium text-darkBlue mt-4 text-lg'>Day: {props.entry_date.slice(5,10)} - {props.day_of_week}</label>\r\n      <label className=\"block text-sm font-medium text-darkBlue mt-4\">Team:</label>\r\n      <select {...register(\"team\")} className=\"rounded mt-1 p-1\" placeholder='Select your Team' >\r\n      <option>Select your Team</option>\r\n        {teamOptions}\r\n      </select>\r\n      <label className=\"block text-sm font-medium text-darkBlue mt-4\">Time:</label>\r\n      <select {...register(\"time\")} className=\"rounded mt-1 p-1\" placeholder='Select a Time'>\r\n      <option>Select a Time</option>\r\n        {timeOptions}\r\n      </select>\r\n      <input className=\"mt-8 rounded bg-babyPowder text-darkBlue font-semibold cursor-pointer text-lg hover:bg-lightCyan\" type=\"submit\" />\r\n    </form>\r\n    <button className=\"fixed top-2 right-2 text-primary font-extrabold text-lg cursor-pointer\" onClick={() => closeWindow()}>X</button>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}